:root {
  --bg: #111;
  --fg: #fff;
  --muted: #a0a0a0;
  --tile: #1f1f1f;
  --line: #555;
  --num: #333;
  --op: #3B82F6;
  --op-hover: #60A5FA;
  --op-pressed: #2563EB;
  --op-focus: rgba(147, 197, 253, 0.4);
  --util: #3a3a3a;
  --ok: #22C55E;
  --warning: #F59E0B;
  --err: #EF4444;
  --accent: #3B82F6;
  --gap: 20px;
  --slot-min: 200px;
  --digitKey: #171B22;
  --digitKeyActive: #222733;
  --digitText: #556070;
}
* {
  box-sizing: border-box;
}
html,
body,
#root {
  height: 100%;
}
body {
  margin: 0;
  font-family:
    ui-sans-serif,
    -apple-system,
    Segoe UI,
    Roboto,
    Helvetica,
    Arial;
  background: var(--bg);
  color: var(--fg);
  display: flex;
  flex-direction: column;
  align-items: center;
}
/* Header + main padding should match so right edges align */
header {
  width: 100%;
  max-width: 560px;
  padding: 18px 16px 10px 16px; /* match main’s side padding */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 12px;
  position: relative;
}
.brand {
  font-weight: 900;
  letter-spacing: 0.02em;
  font-size: 30px;
  text-align: center;
  margin-bottom: 2px;
}
/* Center digits; make room so the button doesn't overlap */

/* Keep digits centered; reserve space so the button doesn’t overlap them */
/* Three-column grid: [flex] [center content] [flex/right-aligned refresh] */
.puzzle {
  width: 100%;
  display: grid;
  grid-template-columns: 1fr auto 1fr; /* center column auto-sized */
  align-items: center;
  margin-bottom: 16px;
}

/* The digits sit in the middle column, perfectly centered */
.puzzle-center {
  grid-column: 2;
  justify-self: center;
  display: flex;
  align-items: baseline;
  gap: 10px;
  font-size: 22px;
  letter-spacing: 0.2rem;
}

/* Refresh lives in the right column, flush to the edge */
.puzzle > .refresh {
  grid-column: 3;
  justify-self: end;
}
/*.puzzle{ display:flex; align-items:baseline; gap:10px; font-size:22px; letter-spacing:.2rem; justify-content:center; margin-bottom:16px; } */
.with {
  font-family: ui-serif, Georgia, 'Times New Roman', serif;
  font-style: italic;
  color: var(--muted);
  letter-spacing: 0.06em;
  position: relative;
}
.with::before,
.with::after {
  content: '·';
  margin: 0 0.35rem;
  opacity: 0.7;
}

/* Main layout */
main {
  width: 100%;
  max-width: 560px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 22px;
  padding: 6px 16px 24px;
  position: relative;
}
.results,
.slots {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(2, minmax(var(--slot-min), 1fr));
  gap: var(--gap);
  align-items: center;
  justify-items: stretch;
  position: relative;
}

.results {
  min-height: 24px;
}

/* Plain result values (no boxes) */
.resVal {
  font-size: 16px;
  color: var(--muted);
  text-align: center;
  opacity: 0.7;
  min-height: 24px;
}
.resVal.ok {
  color: var(--ok);
  font-weight: 700;
}
.resVal.err {
  color: var(--err);
  font-weight: 600;
}

/* Expression slots */
.slot {
  width: 100%;
  min-height: 64px;
  background: var(--tile);
  border: 2px solid var(--line);
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 10px 14px;
  font-size: 20px;
  transition:
    border-color 0.15s,
    box-shadow 0.15s;
  position: relative;
}
.slot.selected {
  border-color: var(--accent);
  box-shadow: 0 0 0 4px rgba(10, 132, 255, 0.15);
}
.slot .placeholder {
  color: var(--muted);
}

/* '=' centered between expression boxes */
.slots .exprEq {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  font-size: 22px;
  pointer-events: none;
  font-weight: bold;
  transition: color 0.3s ease;
  z-index: 1;
}

.slots .exprEq.neutral {
  color: var(--muted);
}

.slots .exprEq.not-equal {
  color: var(--err);
}

.slots .exprEq.equal {
  color: var(--ok);
}

/* Green glow animation when expressions match */
.slots.matched .slot:first-child {
  animation: successGlowLeft 1.8s ease-out;
}

.slots.matched .slot:nth-child(2) {
  animation: successGlowRight 1.8s ease-out;
}

.slots.matched .exprEq {
  animation: successEqualSign 1.8s ease-out;
}

@keyframes successGlowLeft {
  0% {
    box-shadow: 0 0 0 rgba(34, 197, 94, 0);
    border-color: var(--line);
    transform: scale(1);
  }
  25% {
    box-shadow: 0 0 8px rgba(34, 197, 94, 0.15);
    border-color: var(--ok);
    transform: scale(1.005);
  }
  35% {
    box-shadow: 0 0 12px rgba(34, 197, 94, 0.2);
    border-color: var(--ok);
    transform: scale(1.005);
  }
  50% {
    box-shadow: 0 0 6px rgba(34, 197, 94, 0.12);
    border-color: var(--ok);
    transform: scale(1.002);
  }
  60% {
    box-shadow: 0 0 0 rgba(34, 197, 94, 0);
    border-color: var(--line);
    transform: scale(1);
  }
  100% {
    box-shadow: 0 0 0 rgba(34, 197, 94, 0);
    border-color: var(--line);
    transform: scale(1);
  }
}

@keyframes successEqualSign {
  0% {
    color: var(--err);
  }
  35% {
    color: var(--err);
  }
  45% {
    color: var(--ok);
    text-shadow: 0 0 8px rgba(34, 197, 94, 0.4);
  }
  65% {
    color: var(--ok);
    text-shadow: 0 0 4px rgba(34, 197, 94, 0.3);
  }
  100% {
    color: var(--ok);
    text-shadow: none;
  }
}

/* Claude-style moving glow indicator */
.slots.matched .exprEq::after {
  content: '';
  position: absolute;
  left: -15px;
  top: 50%;
  width: 50px;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(34, 197, 94, 0.2) 30%, 
    rgba(34, 197, 94, 0.5) 50%, 
    rgba(34, 197, 94, 0.2) 70%, 
    transparent 100%);
  transform: translateY(-50%);
  animation: claudeGlow 2s ease-in-out;
}

@keyframes claudeGlow {
  0% { 
    transform: translateY(-50%) translateX(-20px);
    opacity: 0;
    width: 50px;
    height: 2px;
  }
  50% { 
    transform: translateY(-50%) translateX(20px);
    opacity: 1;
    width: 50px;
    height: 2px;
  }
  100% { 
    transform: translateY(-50%) translateX(20px);
    opacity: 0;
    width: 0;
    height: 0;
  }
}

@keyframes successGlowRight {
  0% {
    box-shadow: 0 0 0 rgba(34, 197, 94, 0);
    border-color: var(--line);
    transform: scale(1);
  }
  55% {
    box-shadow: 0 0 0 rgba(34, 197, 94, 0);
    border-color: var(--line);
    transform: scale(1);
  }
  70% {
    box-shadow: 0 0 8px rgba(34, 197, 94, 0.15);
    border-color: var(--ok);
    transform: scale(1.005);
  }
  80% {
    box-shadow: 0 0 12px rgba(34, 197, 94, 0.2);
    border-color: var(--ok);
    transform: scale(1.005);
  }
  95% {
    box-shadow: 0 0 6px rgba(34, 197, 94, 0.12);
    border-color: var(--ok);
    transform: scale(1.002);
  }
  100% {
    box-shadow: 0 0 0 rgba(34, 197, 94, 0);
    border-color: var(--line);
    transform: scale(1);
  }
}

/* iPhone calculator-style refresh button */
.refresh {
  width: auto;
  height: auto;
  border: none;
  background: transparent;
  color: #FF9F0A;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: 22px;
  line-height: 1;
  border-radius: 4px;
  transition: all 0.2s ease;
  padding: 4px;
}

.refresh:hover {
  background: rgba(255, 159, 10, 0.1);
  transform: scale(1.05);
}

.refresh:active {
  transform: scale(0.95);
  background: rgba(255, 159, 10, 0.2);
}

/* Keypad */
.pad {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 12px;
  margin-top: 2px;
  width: 100%;
  max-width: 528px;
}
.btn {
  height: 56px;
  border: none;
  border-radius: 12px;
  font-size: 20px;
  color: #fff;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  user-select: none;
}

/* All digits share the same solid background */
.btn.num {
  background: var(--digitKey);
  color: var(--digitText);
  font-weight: 600;
  transition: all 0.2s ease;
}

/* Allowed digits pop (indigo background) */
.btn.num.allowed {
  color: white;
  background: var(--op);
  font-weight: 700;
}

.btn.num.allowed:hover {
  background: var(--op-hover);
}

.btn.num.allowed:active {
  background: var(--op-pressed);
}

.btn.num.allowed:focus {
  box-shadow: 0 0 0 3px var(--op-focus);
}

/* Active digit keys */
.btn.num:not(.allowed):active {
  background: var(--digitKeyActive);
}

/* Do NOT dim number keys when disabled — keep the same background */
.btn.num[disabled] {
  opacity: 0.35;
  filter: none;
  cursor: not-allowed;
}

.btn.op {
  background: var(--tile);
  border: 2px solid var(--op);
  color: white;
  transition: all 0.2s ease;
}

.btn.op:hover {
  border-color: var(--op-hover);
  background: rgba(59, 130, 246, 0.1);
}

.btn.op:active {
  border-color: var(--op-pressed);
  background: rgba(59, 130, 246, 0.2);
}

.btn.op:focus {
  box-shadow: 0 0 0 3px var(--op-focus);
}

/* Fix vertical centering for asterisk symbol */
.btn.op.multiply {
  line-height: 0.85;
  display: flex;
  align-items: center;
  justify-content: center;
}

.btn.util {
  background: var(--util);
}


@media (max-width: 500px) {
  .pad {
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
    max-width: calc(100vw - 32px);
  }
  .btn {
    height: 48px;
    font-size: 18px;
  }
  :root {
    --slot-min: 160px;
  }
}
